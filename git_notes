git --version |=>to check version
git config |=>configuration settings
git config --list |=>user.email=******* ,user.name=*********
git config --global user.name "arunnn" |=>to set user name in global scope
git config --global user.email "88888888"|=>to set user email in global scope


staging area => place where to maintain the files which will handled by remote repo
commit history => maintain like a version

git init => create a git local repository
git init -b main<branch name> => create a git local repository with branch 
git status => show git status
rm -rf .git => to delete a file

git add <filename> => add file to staging area
git add . => add all file in the folder
git rm --cached <filename> => remove file from unstage

git log => check the commit status
git commit -m "commit message" =>to commit files added in staging area
git commit -a -m "commit message" => to commit files with added to staging area
(check sum will create for every commit, sha1 algorithm,40 characters but it show only 7)
git rm --cached <filename> => to remove file from commited state

git diff =>show the what are the changes in the files between modify(working file) and staging files
git diff --staged => show the difference between staging file and commit area

readme.md => md-markdown

git clone <repo_link> =>to copy the data from remote repository


git branch -M <branchname> => create branch and make as main branch
git remote -v => show remote path


 #tag is version like v6.2.7
 #annotated tagging
 #light weight tagging
git tag => show tags
 #annotated tagging
git tag -a v1.0 -m "1st relese" => create annotated tag
git show <tag name> =>show tag description
git push origin <tag name> =>create a new tag

#git branch
git branch <branch name> => create new branch
git checkout <branch name> => switch to other branch old method
git switch <branch name> => switch to other branch
git branch => show local repo branches
git branch -v => show local repo branches with date
git branch -a => show local and remote repo branches 
git branch -r => show remote repo branches 

git clone <url> =>clone a remote repo to local


echo "text" => to print text in terminal
echo "text" >> <filename_with_extention> => create a file with text content
ssh-keygen -o => by this we can authenticate only one time.




